import jsPDF from 'jspdf'
import QRCode from 'qrcode'

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á QR Code
const generateQRCode = async (text: string): Promise<string> => {
    try {
        const qrCodeDataURL = await QRCode.toDataURL(text, {
            width: 200, // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô
            margin: 2,
            color: {
                dark: '#000000',
                light: '#FFFFFF'
            },
            errorCorrectionLevel: 'M' // ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á
        })
        return qrCodeDataURL
    } catch (error) {
        console.error('‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á QR Code:', error)
        throw error
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏° QR Code ‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡∏Ç‡∏≠‡∏á PDF
const addQRCodeToAllPages = async (pdf: jsPDF, uuid: string): Promise<void> => {
    try {
        console.log('üîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á QR Code ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö UUID:', uuid)

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á QR Code ‡∏à‡∏≤‡∏Å UUID
        const qrCodeDataURL = await generateQRCode(uuid)

        // ‡πÑ‡∏î‡πâ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        const totalPages = (pdf as any).internal.pages.length - 1 // ‡∏´‡∏±‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô template

        // ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡πÄ‡∏û‡∏¥‡πà‡∏° QR Code ‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å‡∏´‡∏ô‡πâ‡∏≤
        for (let pageNum = 1; pageNum <= totalPages; pageNum++) {
            pdf.setPage(pageNum)

            // ‡πÑ‡∏î‡πâ‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏© A4 (210 x 297 mm)
            const pageWidth = pdf.internal.pageSize.getWidth()
            const pageHeight = pdf.internal.pageSize.getHeight()

            // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡∏ô‡∏≤‡∏î‡πÅ‡∏•‡∏∞‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Ç‡∏≠‡∏á QR Code
            const qrSize = 25 // ‡∏Ç‡∏ô‡∏≤‡∏î QR Code (mm)
            const qrX = pageWidth - qrSize - 10 // 10mm ‡∏à‡∏≤‡∏Å‡∏Ç‡∏≠‡∏ö‡∏Ç‡∏ß‡∏≤
            const qrY = pageHeight - qrSize - 10 // 10mm ‡∏à‡∏≤‡∏Å‡∏Ç‡∏≠‡∏ö‡∏•‡πà‡∏≤‡∏á

            // ‡πÄ‡∏û‡∏¥‡πà‡∏° QR Code ‡∏•‡∏á‡πÉ‡∏ô PDF
            pdf.addImage(qrCodeDataURL, 'PNG', qrX, qrY, qrSize, qrSize)

            // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° UUID ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á QR Code ‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏∂‡πà‡∏á‡∏Å‡∏•‡∏≤‡∏á (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å)
            if (pageNum === 1) {
                pdf.setFont('helvetica') // ‡πÉ‡∏ä‡πâ‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö UUID
                pdf.setFontSize(5)
                const textY = qrY + qrSize + 3 // ‡∏ß‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á QR Code 3mm
                const centerX = qrX + (qrSize / 2) // ‡∏à‡∏∏‡∏î‡∏Å‡∏∂‡πà‡∏á‡∏Å‡∏•‡∏≤‡∏á‡∏Ç‡∏≠‡∏á QR Code
                pdf.text(uuid, centerX, textY, { align: 'center' })
            }
        }

        console.log(`‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° QR Code ‡∏•‡∏á‡πÉ‡∏ô PDF ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (${totalPages} ‡∏´‡∏ô‡πâ‡∏≤)`)

    } catch (qrError) {
        console.warn('‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á QR Code ‡πÑ‡∏î‡πâ:', qrError)

        // ‡∏ñ‡πâ‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á QR Code ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ ‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á UUID ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å‡πÅ‡∏ó‡∏ô
        pdf.setPage(1)
        pdf.setFont('helvetica')
        pdf.setFontSize(8)
        const pageWidth = pdf.internal.pageSize.getWidth()
        const pageHeight = pdf.internal.pageSize.getHeight()
        pdf.text('UUID:', pageWidth - 60, pageHeight - 15)
        pdf.text(uuid, pageWidth - 60, pageHeight - 10)
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏´‡∏•‡∏î‡∏ü‡∏≠‡∏ô‡∏ï‡πå TH Sarabun
const loadThaiFont = async (fontPath: string): Promise<string> => {
    try {
        const response = await fetch(fontPath)
        if (!response.ok) {
            throw new Error(`‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏ü‡∏≠‡∏ô‡∏ï‡πå ${fontPath} ‡πÑ‡∏î‡πâ`)
        }
        const arrayBuffer = await response.arrayBuffer()
        const base64String = btoa(
            new Uint8Array(arrayBuffer).reduce((data, byte) => data + String.fromCharCode(byte), '')
        )
        return base64String
    } catch (error) {
        console.error('‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏ü‡∏≠‡∏ô‡∏ï‡πå:', error)
        throw error
    }
}

// Type definitions ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà backend ‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö
interface FormData {
    academicYear: string
    semester: string
    submittedAt: string
    timestamp: string
}

interface ExcelData {
    hasData: boolean
    sheetName?: string
    data?: { [key: string]: any }
    totalFields?: number
    message?: string
    // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏ü‡∏•‡πå Excel (‡πÄ‡∏û‡∏¥‡πà‡∏°)
    fileName?: string
    fileSize?: number
    uploadedAt?: string
}

interface GeminiOcrData {
    course_id: string
    course_name: string
    academic_year: string
    semester: string
    grade_level: string
    section: number
    teacher: string
    grade_valid: boolean
    attitude_valid: boolean
    read_analyze_write_valid: boolean
}

interface GeminiOcrResult {
    hasData: boolean
    data?: GeminiOcrData
    processedAt?: string
    message?: string
}

interface Summary {
    success: boolean
    message: string
    hasExcelData: boolean
    hasPdfData: boolean
    totalDataSources: number
}

interface DatabaseInfo {
    recordId: string
    uuid: string
    savedAt: string
}

interface ReportData {
    formData: FormData
    excelData: ExcelData
    geminiOcrResult: GeminiOcrResult
    summary: Summary
    database?: DatabaseInfo
}

/**
 * ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á PDF ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô ‡∏õ‡∏û.5 ‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà backend ‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö
 * ‡∏à‡∏∞‡πÄ‡∏õ‡∏¥‡∏î PDF ‡πÉ‡∏ô‡πÅ‡∏ó‡∏ö‡πÉ‡∏´‡∏°‡πà ‡πÅ‡∏•‡∏∞‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏î‡πâ‡∏à‡∏∞‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
 * @param data ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å backend API
 */
export const generatePDF = async (data: ReportData): Promise<void> => {
    try {
        const pdf = new jsPDF()

        // ‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏≠‡∏ô‡∏ï‡πå TH Sarabun
        let hasThaiFont = false
        try {
            // ‡πÇ‡∏´‡∏•‡∏î‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡∏õ‡∏Å‡∏ï‡∏¥
            const fontBase64 = await loadThaiFont('/fonts/THSarabun.ttf')
            pdf.addFileToVFS('THSarabun.ttf', fontBase64)
            pdf.addFont('THSarabun.ttf', 'THSarabun', 'normal')
            hasThaiFont = true

            // ‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡πÇ‡∏´‡∏•‡∏î‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡∏´‡∏ô‡∏±‡∏Å
            try {
                const fontBoldBase64 = await loadThaiFont('/fonts/THSarabun Bold.ttf')
                pdf.addFileToVFS('THSarabun-Bold.ttf', fontBoldBase64)
                pdf.addFont('THSarabun-Bold.ttf', 'THSarabun', 'bold')
                console.log('‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏ü‡∏≠‡∏ô‡∏ï‡πå TH Sarabun (‡∏õ‡∏Å‡∏ï‡∏¥‡πÅ‡∏•‡∏∞‡∏´‡∏ô‡∏±‡∏Å) ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à')
            } catch (boldFontError) {
                console.warn('‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡∏´‡∏ô‡∏±‡∏Å‡πÑ‡∏î‡πâ - ‡πÉ‡∏ä‡πâ‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡∏õ‡∏Å‡∏ï‡∏¥‡πÅ‡∏ó‡∏ô:', boldFontError)
            }

            pdf.setFont('THSarabun')
        } catch (fontError) {
            console.warn('‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏ü‡∏≠‡∏ô‡∏ï‡πå TH Sarabun ‡πÑ‡∏î‡πâ - ‡πÉ‡∏ä‡πâ‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô:', fontError)
            pdf.setFont('helvetica')
        }

        // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ü‡∏≠‡∏ô‡∏ï‡πå
        const setFont = (style: 'normal' | 'bold' = 'normal') => {
            pdf.setFont(hasThaiFont ? 'THSarabun' : 'helvetica', style)
        }

        // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡∏≠‡∏ö‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©‡∏ó‡∏±‡πâ‡∏á 4 ‡∏î‡πâ‡∏≤‡∏ô (‡∏´‡∏ô‡πà‡∏ß‡∏¢: mm)
        const margins = {
            top: 10,
            right: 15,
            bottom: 15,
            left: 15
        }

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏±‡∏ß 4 ‡πÅ‡∏ñ‡∏ß 3 ‡∏Ñ‡∏≠‡∏•‡∏•‡∏±‡∏°‡∏ô‡πå
        const pageWidth = pdf.internal.pageSize.getWidth()
        const tableStartX = margins.left
        const tableStartY = margins.top
        const tableWidth = pageWidth - margins.left - margins.right // ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏û‡∏≠‡∏î‡∏µ‡∏Å‡∏±‡∏ö‡∏Ç‡∏≠‡∏ö
        const tableHeight = 40 // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏õ‡πá‡∏ô 40mm

        // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏≠‡∏•‡∏•‡∏±‡∏°‡∏ô‡πå (10%, 80%, 10%)
        const col1Width = tableWidth * 0.2  // ‡∏Ñ‡∏≠‡∏•‡∏•‡∏±‡∏°‡∏ô‡πå 1: 10%
        const col2Width = tableWidth * 0.6  // ‡∏Ñ‡∏≠‡∏•‡∏•‡∏±‡∏°‡∏ô‡πå 2: 80%
        const col3Width = tableWidth * 0.2  // ‡∏Ñ‡∏≠‡∏•‡∏•‡∏±‡∏°‡∏ô‡πå 3: 10%
        const cellHeight = tableHeight / 4 // ‡πÅ‡∏ö‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô 4 ‡πÅ‡∏ñ‡∏ß‡πÄ‡∏ó‡πà‡∏≤ ‡πÜ ‡∏Å‡∏±‡∏ô

        // ‡∏ß‡∏≤‡∏î‡∏Å‡∏£‡∏≠‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á
        pdf.setDrawColor(0, 0, 0) // ‡∏™‡∏µ‡∏î‡∏≥
        pdf.setLineWidth(0.2) // ‡∏•‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ô‡∏≤‡∏Ç‡∏≠‡∏á‡πÄ‡∏™‡πâ‡∏ô‡πÄ‡∏õ‡πá‡∏ô 0.2mm

        // ‡∏ß‡∏≤‡∏î‡πÄ‡∏™‡πâ‡∏ô‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô (5 ‡πÄ‡∏™‡πâ‡∏ô ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö 4 ‡πÅ‡∏ñ‡∏ß) - ‡πÑ‡∏°‡πà‡∏ß‡∏≤‡∏î‡πÉ‡∏ô‡∏Ñ‡∏≠‡∏•‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà 1 ‡∏ó‡∏µ‡πà‡∏ú‡∏™‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß
        for (let i = 0; i <= 4; i++) {
            const y = tableStartY + (i * cellHeight)
            // ‡πÄ‡∏™‡πâ‡∏ô‡∏ö‡∏ô‡πÅ‡∏•‡∏∞‡∏•‡πà‡∏≤‡∏á‡∏™‡∏∏‡∏î‡∏ß‡∏≤‡∏î‡πÄ‡∏ï‡πá‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á
            if (i === 0 || i === 4) {
                pdf.line(tableStartX, y, tableStartX + tableWidth, y)
            } else {
                // ‡πÄ‡∏™‡πâ‡∏ô‡∏Å‡∏•‡∏≤‡∏á‡∏ß‡∏≤‡∏î‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡∏Ñ‡∏≠‡∏•‡∏•‡∏±‡∏°‡∏ô‡πå 2-3 (‡∏Ç‡πâ‡∏≤‡∏°‡∏Ñ‡∏≠‡∏•‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà 1)
                pdf.line(tableStartX + col1Width, y, tableStartX + tableWidth, y)
            }
        }

        // ‡∏ß‡∏≤‡∏î‡πÄ‡∏™‡πâ‡∏ô‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á (‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ú‡∏™‡∏≤‡∏ô‡πÄ‡∏ã‡∏•‡∏•‡πå‡∏Ñ‡∏≠‡∏•‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà 1 ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î 4 ‡πÅ‡∏ñ‡∏ß)
        // ‡πÄ‡∏™‡πâ‡∏ô‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á‡∏ã‡πâ‡∏≤‡∏¢‡∏™‡∏∏‡∏î
        pdf.line(tableStartX, tableStartY, tableStartX, tableStartY + tableHeight)

        // ‡πÄ‡∏™‡πâ‡∏ô‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡πÅ‡∏ö‡πà‡∏á‡∏Ñ‡∏≠‡∏•‡∏•‡∏±‡∏°‡∏ô‡πå 1 ‡πÅ‡∏•‡∏∞ 2-3 (‡∏¢‡∏≤‡∏ß‡πÄ‡∏ï‡πá‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á)
        const col1EndX = tableStartX + col1Width
        pdf.line(col1EndX, tableStartY, col1EndX, tableStartY + tableHeight)

        // ‡πÄ‡∏™‡πâ‡∏ô‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡πÅ‡∏ö‡πà‡∏á‡∏Ñ‡∏≠‡∏•‡∏•‡∏±‡∏°‡∏ô‡πå 2 ‡πÅ‡∏•‡∏∞ 3 (‡∏¢‡∏≤‡∏ß‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏ñ‡∏ß 3-4, ‡πÑ‡∏°‡πà‡∏ß‡∏≤‡∏î‡πÉ‡∏ô‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà 1 ‡πÅ‡∏•‡∏∞ 2)
        const col2EndX = tableStartX + col1Width + col2Width
        pdf.line(col2EndX, tableStartY + (2 * cellHeight), col2EndX, tableStartY + tableHeight)

        // ‡πÄ‡∏™‡πâ‡∏ô‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á‡∏Ç‡∏ß‡∏≤‡∏™‡∏∏‡∏î
        const tableEndX = tableStartX + tableWidth
        pdf.line(tableEndX, tableStartY, tableEndX, tableStartY + tableHeight)

        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡πÉ‡∏ô‡∏Ñ‡∏≠‡∏•‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà 1 (‡∏ú‡∏™‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á 4 ‡πÅ‡∏ñ‡∏ß)
        try {
            const logoResponse = await fetch('/logo-ppk-512x512-1.png')
            if (logoResponse.ok) {
                const logoArrayBuffer = await logoResponse.arrayBuffer()
                const logoBase64 = btoa(
                    new Uint8Array(logoArrayBuffer).reduce((data, byte) => data + String.fromCharCode(byte), '')
                )
                const logoDataURL = `data:image/png;base64,${logoBase64}`

                // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Å‡∏∂‡πà‡∏á‡∏Å‡∏•‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏≠‡∏•‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà 1 ‡∏ó‡∏µ‡πà‡∏ú‡∏™‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á 4 ‡πÅ‡∏ñ‡∏ß
                const logoSize = 25 // ‡∏Ç‡∏ô‡∏≤‡∏î‡πÇ‡∏•‡πÇ‡∏Å‡πâ 25mm (‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡∏ç‡πà‡∏Ç‡∏∂‡πâ‡∏ô)
                const logoX = tableStartX + (col1Width - logoSize) / 2 // ‡∏à‡∏±‡∏î‡∏Å‡∏∂‡πà‡∏á‡∏Å‡∏•‡∏≤‡∏á‡πÉ‡∏ô‡∏Ñ‡∏≠‡∏•‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà 1
                const logoY = tableStartY + (tableHeight - logoSize) / 2 // ‡∏à‡∏±‡∏î‡∏Å‡∏∂‡πà‡∏á‡∏Å‡∏•‡∏≤‡∏á‡πÉ‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î

                pdf.addImage(logoDataURL, 'PNG', logoX, logoY, logoSize, logoSize)
                console.log('‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡πÉ‡∏ô‡∏Ñ‡∏≠‡∏•‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà 1 (‡∏ú‡∏™‡∏≤‡∏ô 4 ‡πÅ‡∏ñ‡∏ß) ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à')
            } else {
                console.warn('‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡πÑ‡∏î‡πâ')
            }
        } catch (logoError) {
            console.warn('‚ö†Ô∏è ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏•‡πÇ‡∏Å‡πâ:', logoError)
        }

        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡πÄ‡∏ã‡∏•‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ú‡∏™‡∏≤‡∏ô (1,2+1,3) - ‡πÅ‡∏ñ‡∏ß‡πÅ‡∏£‡∏Å ‡∏Ñ‡∏≠‡∏•‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà 2-3
        setFont('bold')
        pdf.setFontSize(16)
        const mergedCellStartX = tableStartX + col1Width // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏ã‡∏•‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ú‡∏™‡∏≤‡∏ô
        const mergedCellWidth = col2Width + col3Width // ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡πÄ‡∏ã‡∏•‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ú‡∏™‡∏≤‡∏ô (‡∏Ñ‡∏≠‡∏•‡∏•‡∏±‡∏°‡∏ô‡πå 2+3)
        const textX = mergedCellStartX + (mergedCellWidth / 2) // ‡∏Å‡∏∂‡πà‡∏á‡∏Å‡∏•‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡πÄ‡∏ã‡∏•‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ú‡∏™‡∏≤‡∏ô
        const textY = tableStartY + (cellHeight / 2) + 3 // ‡∏Å‡∏∂‡πà‡∏á‡∏Å‡∏•‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡πÅ‡∏ñ‡∏ß‡πÅ‡∏£‡∏Å (‡πÄ‡∏û‡∏¥‡πà‡∏° 3 ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÉ‡∏´‡πâ‡∏î‡∏µ)
        pdf.text('‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ‡∏õ‡∏û.5', textX, textY, { align: 'center' })        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡πÄ‡∏ã‡∏•‡∏•‡πå‡∏ó‡∏µ‡πà 2,2+2,3 - ‡∏õ‡∏µ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÅ‡∏•‡∏∞‡∏†‡∏≤‡∏Ñ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
        setFont('normal')
        pdf.setFontSize(16)
        const mergedCell22StartX = tableStartX + col1Width // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏ã‡∏•‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ú‡∏™‡∏≤‡∏ô (‡∏Ñ‡∏≠‡∏•‡∏•‡∏±‡∏°‡∏ô‡πå 2+3)
        const mergedCell22Width = col2Width + col3Width // ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡πÄ‡∏ã‡∏•‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ú‡∏™‡∏≤‡∏ô
        const cell22CenterX = mergedCell22StartX + (mergedCell22Width / 2) // ‡∏à‡∏±‡∏î‡∏Å‡∏∂‡πà‡∏á‡∏Å‡∏•‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡πÄ‡∏ã‡∏•‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ú‡∏™‡∏≤‡∏ô
        const cell22Y = tableStartY + cellHeight + (cellHeight / 2) + 2 // ‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà 2 + ‡∏Å‡∏∂‡πà‡∏á‡∏Å‡∏•‡∏≤‡∏á‡πÄ‡∏ã‡∏•‡∏•‡πå

        // ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Excel ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å formData ‡πÄ‡∏õ‡πá‡∏ô fallback
        const academicYear = data.excelData.data?.home_academic_year || data.formData.academicYear || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•'
        const semester = data.excelData.data?.home_semester || data.formData.semester || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•'

        pdf.text(`‡∏õ‡∏µ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤ ${academicYear} ‡∏†‡∏≤‡∏Ñ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà ${semester}`, cell22CenterX, cell22Y, { align: 'center' })

        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡πÄ‡∏ã‡∏•‡∏•‡πå‡∏ó‡∏µ‡πà 3,2 - ‡∏ß‡∏¥‡∏ä‡∏≤ ‡∏£‡∏´‡∏±‡∏™‡∏ß‡∏¥‡∏ä‡∏≤ ‡πÅ‡∏•‡∏∞‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡∏¥‡∏ä‡∏≤
        setFont('normal')
        pdf.setFontSize(14)
        const cell32X = tableStartX + col1Width + 5 // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ñ‡∏≠‡∏•‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà 2 + margin 5mm
        const cell32Y = tableStartY + (2 * cellHeight) + (cellHeight / 2) + 2 // ‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà 3 + ‡∏Å‡∏∂‡πà‡∏á‡∏Å‡∏•‡∏≤‡∏á‡πÄ‡∏ã‡∏•‡∏•‡πå

        // ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Excel
        const subjectCode = data.excelData.data?.home_subject_code || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•'
        const subject = data.excelData.data?.home_subject || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•'

        pdf.text(`‡∏ß‡∏¥‡∏ä‡∏≤ ${subjectCode} ${subject}`, cell32X, cell32Y)

        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡πÄ‡∏ã‡∏•‡∏•‡πå‡∏ó‡∏µ‡πà 3,3 - ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ï‡πà‡∏≠‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå
        setFont('normal')
        pdf.setFontSize(14)
        const cell33X = tableStartX + col1Width + col2Width + 5 // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ñ‡∏≠‡∏•‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà 3 + margin 5mm
        const cell33Y = tableStartY + (2 * cellHeight) + (cellHeight / 2) + 2 // ‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà 3 + ‡∏Å‡∏∂‡πà‡∏á‡∏Å‡∏•‡∏≤‡∏á‡πÄ‡∏ã‡∏•‡∏•‡πå

        // ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Excel
        const studyTime = data.excelData.data?.home_study_time || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•'

        pdf.text(`${studyTime} ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á/‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå`, cell33X, cell33Y)

        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡πÄ‡∏ã‡∏•‡∏•‡πå‡∏ó‡∏µ‡πà 4,2 - ‡∏ú‡∏π‡πâ‡∏™‡∏≠‡∏ô
        setFont('normal')
        pdf.setFontSize(14)
        const cell42X = tableStartX + col1Width + 5 // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ñ‡∏≠‡∏•‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà 2 + margin 5mm
        const cell42Y = tableStartY + (3 * cellHeight) + (cellHeight / 2) + 2 // ‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà 4 + ‡∏Å‡∏∂‡πà‡∏á‡∏Å‡∏•‡∏≤‡∏á‡πÄ‡∏ã‡∏•‡∏•‡πå

        // ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Excel
        const teacher = data.excelData.data?.home_teacher || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•'

        pdf.text(`‡∏ú‡∏π‡πâ‡∏™‡∏≠‡∏ô ${teacher}`, cell42X, cell42Y)

        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡πÄ‡∏ã‡∏•‡∏•‡πå‡∏ó‡∏µ‡πà 4,3 - ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏Å‡∏¥‡∏ï
        setFont('normal')
        pdf.setFontSize(14)
        const cell43X = tableStartX + col1Width + col2Width + 5 // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ñ‡∏≠‡∏•‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà 3 + margin 5mm
        const cell43Y = tableStartY + (3 * cellHeight) + (cellHeight / 2) + 2 // ‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà 4 + ‡∏Å‡∏∂‡πà‡∏á‡∏Å‡∏•‡∏≤‡∏á‡πÄ‡∏ã‡∏•‡∏•‡πå

        // ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Excel
        const credit = data.excelData.data?.home_credit || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•'

        pdf.text(`${credit} ‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏Å‡∏¥‡∏ï`, cell43X, cell43Y)

        // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ (‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ï‡πâ‡∏ï‡∏≤‡∏£‡∏≤‡∏á)
        setFont('normal')
        pdf.setFontSize(14)
        const contentStartY = tableStartY + tableHeight + 8 // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ 10mm ‡πÉ‡∏ï‡πâ‡∏ï‡∏≤‡∏£‡∏≤‡∏á (‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏™‡∏π‡∏á 80mm ‡πÅ‡∏•‡πâ‡∏ß)
        let yPosition = contentStartY // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏´‡∏•‡∏±‡∏Å

        // ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏•‡πå Excel (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•)
        if (data.excelData.fileName || data.excelData.fileSize || data.excelData.uploadedAt) {
            setFont('bold')
            pdf.setFontSize(12)
            pdf.text('‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏•‡πå Excel:', margins.left, yPosition)
            yPosition += 5

            setFont('normal')
            pdf.setFontSize(11)

            // ‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå
            if (data.excelData.fileName) {
                pdf.text(`1. ‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå: ${data.excelData.fileName}`, margins.left + 5, yPosition)
                yPosition += 5
            }

            // ‡∏Ç‡∏ô‡∏≤‡∏î‡πÑ‡∏ü‡∏•‡πå
            if (data.excelData.fileSize) {
                const fileSizeInKB = (data.excelData.fileSize / 1024).toFixed(2)
                const fileSizeInMB = (data.excelData.fileSize / (1024 * 1024)).toFixed(2)
                const displayFileSize = data.excelData.fileSize < 1024 * 1024
                    ? `${fileSizeInKB} KB`
                    : `${fileSizeInMB} MB`
                pdf.text(`2. ‡∏Ç‡∏ô‡∏≤‡∏î‡πÑ‡∏ü‡∏•‡πå: ${displayFileSize}`, margins.left + 5, yPosition)
                yPosition += 5
            }

            // ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î
            if (data.excelData.uploadedAt) {
                const uploadDate = new Date(data.excelData.uploadedAt).toLocaleString('th-TH', {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric',
                    hour: '2-digit',
                    minute: '2-digit',
                    second: '2-digit'
                })
                pdf.text(`3. ‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏°‡∏∑‡πà‡∏≠: ${uploadDate}`, margins.left + 5, yPosition)
                yPosition += 5
            }

            yPosition += 10 // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏∞‡∏¢‡∏∞‡∏´‡πà‡∏≤‡∏á
        }

        // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å PDF OCR (Gemini)
        // if (data.geminiOcrResult.hasData && data.geminiOcrResult.data) {
        //     const ocrData = data.geminiOcrResult.data

        //     setFont('bold')
        //     pdf.setFontSize(16)
        //     pdf.text('‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤ (‡∏à‡∏≤‡∏Å PDF)', margins.left, yPosition)
        //     yPosition += 15

        //     setFont('normal')
        //     pdf.setFontSize(12)
        //     pdf.text(`‡∏£‡∏´‡∏±‡∏™‡∏ß‡∏¥‡∏ä‡∏≤: ${ocrData.course_id || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•'}`, margins.left, yPosition)
        //     yPosition += 10
        //     pdf.text(`‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡∏¥‡∏ä‡∏≤: ${ocrData.course_name || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•'}`, margins.left, yPosition)
        //     yPosition += 10
        //     pdf.text(`‡∏õ‡∏µ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤: ${ocrData.academic_year || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•'}`, margins.left, yPosition)
        //     yPosition += 10
        //     pdf.text(`‡πÄ‡∏ó‡∏≠‡∏°: ${ocrData.semester || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•'}`, margins.left, yPosition)
        //     yPosition += 10
        //     pdf.text(`‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô: ${ocrData.grade_level || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•'}`, margins.left, yPosition)
        //     yPosition += 10
        //     pdf.text(`‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ô: ${ocrData.section || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•'}`, margins.left, yPosition)
        //     yPosition += 10
        //     pdf.text(`‡∏Ñ‡∏£‡∏π‡∏ú‡∏π‡πâ‡∏™‡∏≠‡∏ô: ${ocrData.teacher || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•'}`, margins.left, yPosition)
        //     yPosition += 20

        //     // ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô
        //     setFont('bold')
        //     pdf.setFontSize(16)
        //     pdf.text('‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô', margins.left, yPosition)
        //     yPosition += 15

        //     setFont('normal')
        //     pdf.setFontSize(12)
        //     const gradeCheck = ocrData.grade_valid ? '‚úì' : '‚úó'
        //     const attitudeCheck = ocrData.attitude_valid ? '‚úì' : '‚úó'
        //     const readCheck = ocrData.read_analyze_write_valid ? '‚úì' : '‚úó'

        //     pdf.text(`${gradeCheck} ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô (‚â•70%): ${ocrData.grade_valid ? '‡∏ú‡πà‡∏≤‡∏ô' : '‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô'}`, margins.left, yPosition)
        //     yPosition += 10
        //     pdf.text(`${attitudeCheck} ‡∏Ñ‡∏∏‡∏ì‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏≠‡∏±‡∏ô‡∏û‡∏∂‡∏á‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå (‚â•80%): ${ocrData.attitude_valid ? '‡∏ú‡πà‡∏≤‡∏ô' : '‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô'}`, margins.left, yPosition)
        //     yPosition += 10
        //     pdf.text(`${readCheck} ‡∏≠‡πà‡∏≤‡∏ô ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô (‚â•80%): ${ocrData.read_analyze_write_valid ? '‡∏ú‡πà‡∏≤‡∏ô' : '‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô'}`, margins.left, yPosition)
        //     yPosition += 20
        // } else {
        //     setFont('normal')
        //     pdf.setFontSize(14)
        //     pdf.text('‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å PDF: ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡πÑ‡∏î‡πâ', margins.left, yPosition)
        //     yPosition += 20
        // }

        // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Excel
        if (data.excelData.hasData && data.excelData.data) {
            setFont('bold')
            pdf.setFontSize(16)
            pdf.text(`‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå Excel (‡∏ä‡∏µ‡∏ó "${data.excelData.sheetName}")`, margins.left, yPosition)
            yPosition += 15

            setFont('normal')
            pdf.setFontSize(12)
            Object.entries(data.excelData.data).forEach(([key, value]) => {
                // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡πÄ‡∏Å‡∏¥‡∏ô‡∏´‡∏ô‡πâ‡∏≤ ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏ô‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                if (yPosition > 270) {
                    pdf.addPage()
                    yPosition = margins.top + 10
                }

                // ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤ value ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô string
                const displayValue = value !== null && value !== undefined ? String(value) : '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•'
                pdf.text(`${key}: ${displayValue}`, margins.left, yPosition)
                yPosition += 8
            })
            yPosition += 15
        } else {
            setFont('normal')
            pdf.setFontSize(14)
            pdf.text('‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Excel: ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ä‡∏µ‡∏ó "check" ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏î‡πâ', margins.left, yPosition)
            yPosition += 20
        }

        // ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•
        if (yPosition > 250) {
            pdf.addPage()
            yPosition = margins.top + 10
        }

        setFont('bold')
        pdf.setFontSize(16)
        pdf.text('‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•', margins.left, yPosition)
        yPosition += 15

        setFont('normal')
        pdf.setFontSize(12)
        pdf.text(`‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ${data.summary.success ? '‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à' : '‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß'}`, margins.left, yPosition)
        yPosition += 10
        pdf.text(`‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏´‡∏•‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: ${data.summary.totalDataSources} ‡πÅ‡∏´‡∏•‡πà‡∏á`, margins.left, yPosition)
        yPosition += 10
        pdf.text(`‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Excel: ${data.summary.hasExcelData ? '‡∏°‡∏µ' : '‡πÑ‡∏°‡πà‡∏°‡∏µ'}`, margins.left, yPosition)
        yPosition += 10
        pdf.text(`‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• PDF: ${data.summary.hasPdfData ? '‡∏°‡∏µ' : '‡πÑ‡∏°‡πà‡∏°‡∏µ'}`, margins.left, yPosition)
        yPosition += 20

        // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏π‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏ú‡∏¥‡∏î‡∏ä‡∏≠‡∏ö (‡∏à‡∏≤‡∏Å Excel home_teacher)
        if (data.excelData.hasData && data.excelData.data?.home_teacher) {
            setFont('bold')
            pdf.setFontSize(14)
            pdf.text('‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡∏ú‡∏¥‡∏î‡∏ä‡∏≠‡∏ö', margins.left, yPosition)
            yPosition += 12

            setFont('normal')
            pdf.setFontSize(12)
            pdf.text(`‡∏Ñ‡∏£‡∏π‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏ú‡∏¥‡∏î‡∏ä‡∏≠‡∏ö: ${data.excelData.data.home_teacher}`, margins.left, yPosition)
            yPosition += 20
        }

        // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
        if (data.database) {
            setFont('bold')
            pdf.setFontSize(14)
            pdf.text('‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å', margins.left, yPosition)
            yPosition += 12

            setFont('normal')
            pdf.setFontSize(10)
            pdf.text(`Record ID: ${data.database.recordId}`, margins.left, yPosition)
            yPosition += 8
            pdf.text(`UUID: ${data.database.uuid}`, margins.left, yPosition)
            yPosition += 8
            pdf.text(`‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠: ${new Date(data.database.savedAt).toLocaleString('th-TH')}`, margins.left, yPosition)
            yPosition += 15
        }

        // ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡πâ‡∏≤‡∏¢
        setFont('normal')
        pdf.setFontSize(10)
        pdf.text(`‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠: ${data.formData.timestamp}`, margins.left, yPosition)
        pdf.text(`‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡πÄ‡∏°‡∏∑‡πà‡∏≠: ${data.formData.submittedAt}`, margins.left, yPosition + 10)

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏° QR Code ‡∏•‡∏á‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å‡∏´‡∏ô‡πâ‡∏≤ PDF (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ UUID)
        if (data.database?.uuid) {
            try {
                console.log('üîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏° QR Code ‡∏•‡∏á‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å‡∏´‡∏ô‡πâ‡∏≤ PDF ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö UUID:', data.database.uuid)
                await addQRCodeToAllPages(pdf, data.database.uuid)
                console.log('‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° QR Code ‡∏•‡∏á‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å‡∏´‡∏ô‡πâ‡∏≤ PDF ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à')

            } catch (qrError) {
                console.warn('‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á QR Code ‡πÑ‡∏î‡πâ:', qrError)

                // ‡∏ñ‡πâ‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á QR Code ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ ‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á UUID ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡πÅ‡∏ó‡∏ô
                const totalPages = pdf.getNumberOfPages()
                pdf.setPage(totalPages)
                setFont('normal')
                pdf.setFontSize(8)
                const pageWidth = pdf.internal.pageSize.getWidth()
                const pageHeight = pdf.internal.pageSize.getHeight()
                pdf.text('UUID:', pageWidth - 60, pageHeight - 15)
                pdf.text(data.database.uuid, pageWidth - 60, pageHeight - 10)
            }
        }        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå
        const filename = `report-pp5-${data.formData.academicYear}-${data.formData.semester}-${Date.now()}.pdf`

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á Blob ‡∏à‡∏≤‡∏Å PDF ‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ô‡πÅ‡∏ó‡∏ö‡πÉ‡∏´‡∏°‡πà
        const pdfBlob = pdf.output('blob')
        const pdfUrl = URL.createObjectURL(pdfBlob)

        // ‡πÄ‡∏õ‡∏¥‡∏î PDF ‡πÉ‡∏ô‡πÅ‡∏ó‡∏ö‡πÉ‡∏´‡∏°‡πà
        const newWindow = window.open(pdfUrl, '_blank')

        if (newWindow) {
            // ‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà
            newWindow.document.title = filename

            // ‡∏•‡πâ‡∏≤‡∏á URL ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏ñ‡∏π‡∏Å‡∏õ‡∏¥‡∏î (‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î memory)
            newWindow.addEventListener('beforeunload', () => {
                URL.revokeObjectURL(pdfUrl)
            })

            console.log('‚úÖ PDF ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ô‡πÅ‡∏ó‡∏ö‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', filename)
        } else {
            // Fallback: ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡∏ö‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏î‡πâ (popup blocked)
            console.warn('‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡∏ö‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏î‡πâ (‡∏≠‡∏≤‡∏à‡∏ñ‡∏π‡∏Å popup blocker ‡∏ö‡∏•‡πá‡∏≠‡∏Å) - ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏•‡∏á‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÅ‡∏ó‡∏ô')
            pdf.save(filename)
            URL.revokeObjectURL(pdfUrl)
            console.log('‚úÖ PDF ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (fallback):', filename)
        }

    } catch (error) {
        console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á PDF:', error)
        throw new Error('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á PDF ‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á')
    }
}

/**
 * ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
 * @param data ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
 * @returns true ‡∏´‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏°‡∏µ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
 */
export const validateReportData = (data: any): data is ReportData => {
    return (
        data &&
        typeof data === 'object' &&
        data.formData &&
        data.excelData &&
        data.geminiOcrResult &&
        data.summary &&
        typeof data.formData.academicYear === 'string' &&
        typeof data.formData.semester === 'string' &&
        typeof data.formData.timestamp === 'string'
    )
}
